pipeline {
  agent {
    kubernetes {
      label 'petclinic-cd'
      yamlFile 'jenkins-agent-pod.yaml'
    }
  }

  environment {
    REGISTRY_URL = '54.180.16.187:8000'
    REGISTRY_CREDENTIALS = 'Harbor-docker-registry'
    APP_IMAGE = null
    IMAGE_REPO = 'repo-spring-petclinic-rest'
    IMAGE_NAME = 'spring-petclinic-rest'
    IMAGE_TAG = sh(returnStdout: true, script: '(git rev-parse --short HEAD && echo "_$BUILD_NUMBER") | tr -d "\n"').trim()
    APP_URL='http://ad023ff3956274e04a524f6dfe08fbe1-3c32bf7bdf2ae59d.elb.ap-northeast-2.amazonaws.com/petclinic'
    APP_PORT=80
  }

  stages {
    stage('Package') {
      steps {
        container('maven') {
          sh 'mvn clean package -DskipTests'
          archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
        }
      }
    }
    stage('Build Docker image') {
      steps {
        container('docker') {
          script {
            APP_IMAGE = docker.build("${IMAGE_REPO}/${IMAGE_NAME}:${IMAGE_TAG}")
          }
        }
      }
    }
    stage('Push Docker image') {
      steps {
        container('docker') {
          script {
            docker.withRegistry('http://' + REGISTRY_URL, REGISTRY_CREDENTIALS) {
              APP_IMAGE.push()
              APP_IMAGE.push('latest')
            }
          }
        }
      }
    }
    
   stage('Update manifest') {
    
      steps {
        sh """
          git config --global user.name 'skccdevops03'
          git config --global user.email 'skcc.devops03@sk.com'
          git config --global credential.helper cache
          git config --global push.default simple
        """
        git url: 'https://github.com/skccdevops03/petclinic-argocd-helm.git', credentialsId: 'git_skccdevops03', branch: 'main'
        sh """
          sed -i 's/tag:.*/tag: ${IMAGE_TAG}/g' values.yaml
          git add values.yaml
          git commit -m 'Update Docker image tag: ${IMAGE_TAG}'
          git push origin main
        """
      }
    }
    
      stage('API Test') {
      steps {
        container('newman') {
          
          git url: 'https://github.com/skccdevops03/spring-petclinic-rest.git',
                  credentialsId: 'git_skccdevops03',
                    branch: 'master'
                    
          sh """
            newman run api_test.json \
                  --env-var 'baseUrl=${APP_URL}' --env-var 'petTypeId=""'\
                  --reporter : { html : { export : './petclinic-report.html', template: './customTemplate.hbs' } }
          """
        }
      }
      post {
        always {
          junit 'petclinic-report.html'
        }
      }
    }    
    
  }
}
